name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.2', '8.3', '8.4']
    steps:
    - uses: actions/checkout@v4
    - name: Build and save Docker image
      run: |
        docker build --build-arg PHP_VERSION=${{ matrix.php-version }} -t openswoole-bundle:${{ matrix.php-version }} .
        docker save openswoole-bundle:${{ matrix.php-version }} | gzip > openswoole-bundle-${{ matrix.php-version }}.tar.gz
    - name: Upload Docker image
      uses: actions/upload-artifact@v4
      with:
        name: openswoole-bundle-image-${{ matrix.php-version }}
        path: openswoole-bundle-${{ matrix.php-version }}.tar.gz
        retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        php-version: ['8.2', '8.3', '8.4']
        dependency-version: [prefer-lowest, prefer-stable]

    name: Test PHP ${{ matrix.php-version }} - ${{ matrix.dependency-version }}

    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download Docker image
      uses: actions/download-artifact@v4
      with:
        name: openswoole-bundle-image-${{ matrix.php-version }}

    - name: Load Docker image
      run: docker load < openswoole-bundle-${{ matrix.php-version }}.tar.gz

    - name: Install dependencies
      run: docker run --rm -v ${{ github.workspace }}:/var/www/project openswoole-bundle:${{ matrix.php-version }} composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --ignore-platform-reqs

    - name: Run test suite
      run: docker run --rm -v ${{ github.workspace }}:/var/www/project openswoole-bundle:${{ matrix.php-version }} composer test:run

    - name: Run tests with coverage
      if: matrix.dependency-version == 'prefer-stable' && matrix.php-version == '8.3'
      run: docker run --rm -v ${{ github.workspace }}:/var/www/project openswoole-bundle:${{ matrix.php-version }} composer test:coverage

    - name: Upload coverage reports to Codecov
      if: matrix.dependency-version == 'prefer-stable'
      uses: codecov/codecov-action@v4
      with:
        file: ./reports/coverage/clover.xml
        flags: php
        name: phpunit
        fail_ci_if_error: true
        verbose: true
        use_oidc: true

  static-analysis:
    runs-on: ubuntu-latest
    needs: build
    name: Static Analysis

    steps:
    - uses: actions/checkout@v4

    - name: Download Docker image
      uses: actions/download-artifact@v4
      with:
        name: openswoole-bundle-image

    - name: Load Docker image
      run: docker load < openswoole-bundle.tar.gz

    - name: Install dependencies
      run: docker run --rm -v ${{ github.workspace }}:/var/www/project openswoole-bundle:latest composer install --prefer-dist --no-interaction --ignore-platform-reqs

    - name: Run PHPStan
      run: docker run --rm -v ${{ github.workspace }}:/var/www/project openswoole-bundle:latest bin/phpstan analyse --error-format=github --memory-limit=-1

  code-style:
    runs-on: ubuntu-latest
    needs: build
    name: Code Style

    steps:
    - uses: actions/checkout@v4

    - name: Download Docker image
      uses: actions/download-artifact@v4
      with:
        name: openswoole-bundle-image

    - name: Load Docker image
      run: docker load < openswoole-bundle.tar.gz

    - name: Install dependencies
      run: docker run --rm -v ${{ github.workspace }}:/var/www/project openswoole-bundle:latest composer install --prefer-dist --no-interaction --ignore-platform-reqs

    - name: Run PHP CS Fixer
      run: docker run --rm -v ${{ github.workspace }}:/var/www/project openswoole-bundle:latest bin/php-cs-fixer fix --dry-run --diff --verbose
